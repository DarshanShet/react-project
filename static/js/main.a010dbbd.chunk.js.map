{"version":3,"sources":["components/Header.js","lib/RowCol.js","components/StockAvg.js","components/CagrCalculator.js","components/PercentageCalculator.js","components/NumberToWord.js","components/About.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Navbar","collapseOnSelect","expand","bg","variant","Container","Brand","Toggle","aria-controls","Collapse","id","Nav","className","to","RowCol","text","name","value","size","onChangeHandler","Col","lg","xs","Form","Group","controlId","Label","Control","type","placeholder","onChange","defaultProps","StockAvg","useState","priceOne","qtyOne","priceTwo","qtyTwo","totalInvestment","totalQty","allValues","setAllValues","changeHandler","e","prevValues","target","Card","border","as","Body","onSubmit","preventDefault","alert","CardGroup","Row","Footer","Button","onClick","CagrCalculator","firstValue","finalValue","noOfYears","cagr","allKeys","setAllKeys","Math","pow","PercentageCalculator","percentage","amount","result","amountOne","amountTwo","result2","InputGroup","Prepend","Text","NumberToWord","numberValue","wordValue","num","x","Number","isEmpty","length","take","n","slice","reverse","comp","f","g","not","chunk","drop","a","b","numToWords","String","Array","from","map","ones","tens","huns","join","group","i","filter","About","App","basename","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a010dbbd.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport { Navbar, Nav, Container} from 'react-bootstrap';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <Navbar collapseOnSelect expand='md' bg=\"dark\" variant=\"dark\">\r\n      <Container>\r\n        <Navbar.Brand>Projects</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav>\r\n            <Link className='nav-link' to=\"/\">Stock average calculator</Link>\r\n            <Link className='nav-link' to=\"/cagr-calculator\">CAGR calculator</Link>\r\n            <Link className='nav-link' to=\"/percentage-calculator\">Percentage calculator</Link>\r\n            <Link className='nav-link' to=\"/number-to-word\">Number to word</Link>\r\n            <Link className='nav-link' to=\"/about\">About</Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import {Form, Col} from \"react-bootstrap\";\r\n\r\nconst RowCol = ({text, name, value, size, onChangeHandler}) => {\r\n\r\n  return (\r\n    <Col lg={size} xs={12}>\r\n      <Form.Group controlId={name}>\r\n        <Form.Label>{text}</Form.Label>\r\n        <Form.Control\r\n          type='number'\r\n          placeholder={text}\r\n          name={name}\r\n          value={value}\r\n          onChange={onChangeHandler}\r\n        />\r\n      </Form.Group>\r\n    </Col>\r\n  )\r\n};\r\n\r\nRowCol.defaultProps = {\r\n  value: 0,\r\n  size: 6\r\n}\r\n\r\n\r\nexport default RowCol","import { useState } from 'react'\nimport { Card, CardGroup, Form, Button } from \"react-bootstrap\";\nimport RowCol from '../lib/RowCol';\n\nconst StockAvg = () => {\n  const [allValues, setAllValues] = useState({\n    priceOne: 0, qtyOne: 0,\n    priceTwo: 0, qtyTwo: 0,\n    totalInvestment: 0, totalQty: 0\n  })\n  \n  const changeHandler = e => {\n    setAllValues( prevValues => {\n      return { ...prevValues, [e.target.name]: e.target.value }\n    })\n\n    setAllValues( prevValues => {\n      return { ...prevValues,\n        totalInvestment: (+prevValues.priceOne * +prevValues.qtyOne) + (+prevValues.priceTwo * +prevValues.qtyTwo),\n        totalQty: +prevValues.qtyOne + +prevValues.qtyTwo,\n      }\n    });\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    if (allValues.priceOne <= 0 || allValues.priceTwo <= 0) {\n      alert('Please add a price')\n      return\n    }\n\n    if (allValues.qtyOne <= 0 || allValues.qtyTwo <= 0) {\n      alert('Please add a Quantity')\n      return\n    }\n\n    setAllValues( prevValues => {\n      return { ...prevValues,\n        totalInvestment: (+prevValues.priceOne * +prevValues.qtyOne) + (+prevValues.priceTwo * +prevValues.qtyTwo),\n        totalQty: +prevValues.qtyOne + +prevValues.qtyTwo,\n      }\n    });\n  }\n\n  const handleClear = (e) => {\n    e.preventDefault()\n\n    setAllValues({\n      priceOne: 0, qtyOne: 0,\n      priceTwo: 0, qtyTwo: 0,\n      totalInvestment: 0, totalQty: 0\n    });\n  }\n  \n  return (\n    <Card border=\"success\">\n      <Card.Header as=\"h5\">Stock average calculator</Card.Header>\n      <Card.Body>\n        <Form onSubmit={handleSubmit}>\n          <CardGroup>\n            <Card>\n              <Card.Header as=\"h5\">First Buy</Card.Header>\n              <Card.Body>\n                <Form.Row>\n                  <RowCol text=\"Buy Price\" name=\"priceOne\" value={allValues.priceOne} size=\"6\" onChangeHandler={changeHandler} />\n                  <RowCol text=\"Buy Quantity\" name=\"qtyOne\" value={allValues.qtyOne} size=\"6\" onChangeHandler={changeHandler} />\n                </Form.Row>\n              </Card.Body>\n              <Card.Footer className=\"text-muted\">Total Investment {allValues.priceOne * allValues.qtyOne}</Card.Footer>\n            </Card>\n            <Card>\n              <Card.Header as=\"h5\">Second Buy</Card.Header>\n              <Card.Body>\n                <Form.Row>\n                  <RowCol text=\"Buy Price\" name=\"priceTwo\" value={allValues.priceTwo} size=\"6\" onChangeHandler={changeHandler} />\n                  <RowCol text=\"Buy Quantity\" name=\"qtyTwo\" value={allValues.qtyTwo} size=\"6\" onChangeHandler={changeHandler} />\n                </Form.Row>\n              </Card.Body>\n              <Card.Footer className=\"text-muted\">Total Investment {allValues.priceTwo * allValues.qtyTwo}</Card.Footer>\n            </Card>\n          </CardGroup>\n          <Button variant=\"success\" type=\"submit\">Calculate Average</Button>{' '}\n          <Button variant=\"warning\" type=\"reset\" onClick={handleClear}>Clear</Button>\n        </Form>\n      </Card.Body>\n      <Card.Footer className=\"text-success\">\n        <p>\n          <span>Total Investment { allValues.totalInvestment},  </span>\n          <span>Total Quantity { allValues.totalQty }  </span>\n        </p>\n        <p className=\"text-result\">Average { allValues.totalQty > 0 ? (allValues.totalInvestment / allValues.totalQty) : 0} </p>\n      </Card.Footer>\n    </Card>\n  )\n}\n\nexport default StockAvg\n","import { useState } from 'react'\r\nimport { Card, Form, Row, Button} from \"react-bootstrap\";\r\nimport RowCol from '../lib/RowCol';\r\n\r\nconst CagrCalculator = () => {\r\n  const [allKeys, setAllKeys] = useState({\r\n    firstValue: 0, finalValue: 0,\r\n    noOfYears: 0, cagr: 0\r\n  })\r\n  \r\n  const changeHandler = e => {\r\n    setAllKeys( prevValues => {\r\n      return { ...prevValues, [e.target.name]: e.target.value }\r\n    })\r\n\r\n    setAllKeys( prevValues => {\r\n      if (+prevValues.noOfYears > 0 && +prevValues.finalValue > 0 && +prevValues.firstValue > 0) {\r\n        return { ...prevValues,\r\n          cagr: (Math.pow((+prevValues.finalValue / +prevValues.firstValue), (1/+prevValues.noOfYears)) - 1) * 100\r\n        }\r\n      } else {\r\n        return { ...prevValues, [e.target.name]: e.target.value }\r\n      }\r\n    });\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    if (allKeys.firstValue <= 0) {\r\n      alert('Please enter a Initial Value')\r\n      return\r\n    }\r\n\r\n    if (allKeys.finalValue <= 0) {\r\n      alert('Please enter a Final Value')\r\n      return\r\n    }\r\n\r\n    if (allKeys.noOfYears <= 0) {\r\n      alert('Please enter a no of years')\r\n      return\r\n    }\r\n\r\n    setAllKeys( prevValues => {\r\n      return { ...prevValues,\r\n        cagr: (Math.pow((+prevValues.finalValue / +prevValues.firstValue), (1/+prevValues.noOfYears)) - 1) * 100\r\n      }\r\n    });\r\n  }\r\n\r\n  const handleClear = (e) => {\r\n    e.preventDefault()\r\n\r\n    setAllKeys({\r\n      firstValue: 0, finalValue: 0,\r\n      noOfYears: 0, cagr: 0\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Card border=\"success\">\r\n      <Card.Header as=\"h5\">CAGR calculator</Card.Header>\r\n      <Card.Body>\r\n        <Form onSubmit={handleSubmit}>\r\n          <Row>\r\n            <RowCol text=\"Initial Value\" name=\"firstValue\" value={allKeys.firstValue} size=\"4\" onChangeHandler={changeHandler} />\r\n            <RowCol text=\"Final Value\" name=\"finalValue\" value={allKeys.finalValue} size=\"4\" onChangeHandler={changeHandler} />\r\n            <RowCol text=\"Years\" name=\"noOfYears\" value={allKeys.noOfYears} size=\"4\" onChangeHandler={changeHandler} />\r\n          </Row>\r\n          <Button variant=\"success\" type=\"submit\">Calculate CAGR</Button>{' '}\r\n          <Button variant=\"warning\" type=\"reset\" onClick={handleClear}>Clear</Button>\r\n        </Form>\r\n      </Card.Body>\r\n      <Card.Footer className=\"text-success text-result\">CAGR {allKeys.cagr}%</Card.Footer>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default CagrCalculator\r\n","import { useState } from 'react'\r\nimport { Card, Form, Button, Col, InputGroup, CardGroup } from \"react-bootstrap\";\r\nimport RowCol from '../lib/RowCol';\r\n\r\nconst PercentageCalculator = () => {\r\n  const [allKeys, setAllKeys] = useState({\r\n    percentage: 0, amount: 0, result: 0,\r\n    amountOne: 0, amountTwo: 0, result2: 0\r\n  })\r\n  \r\n  const changeHandler = e => {\r\n    setAllKeys( prevValues => {\r\n      return { ...prevValues, [e.target.name]: e.target.value }\r\n    })\r\n\r\n    setAllKeys( prevValues => {\r\n      if (+prevValues.percentage > 0 && +prevValues.amount > 0) {\r\n        return { ...prevValues,\r\n          result: +prevValues.percentage > 0 && +prevValues.amount > 0 ? (+prevValues.amount * +prevValues.percentage) / 100 : 0,\r\n          result2: +prevValues.amountOne > 0 && +prevValues.amountTwo > 0 ? (+prevValues.amountOne / +prevValues.amountTwo) * 100 : 0\r\n        }\r\n      } else {\r\n        return { ...prevValues, [e.target.name]: e.target.value }\r\n      }\r\n    });\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    if (+allKeys.percentage <= 0) {\r\n      alert('Please enter a percentage')\r\n      return\r\n    }\r\n\r\n    if (+allKeys.amount <= 0) {\r\n      alert('Please enter a Amount')\r\n      return\r\n    }\r\n\r\n    if (+allKeys.percentage > 0 && +allKeys.amount > 0) {\r\n      setAllKeys( prevValues => {\r\n        return { ...prevValues,\r\n          result: (+prevValues.amount * +prevValues.percentage) / 100\r\n        }\r\n      });\r\n    } \r\n    \r\n    if(+allKeys.amountOne > 0 && +allKeys.amountTwo > 0){\r\n      setAllKeys( prevValues => {\r\n        return { ...prevValues,\r\n          result2: (+prevValues.amountOne / +prevValues.amountTwo) * 100\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  const handleClear = (e) => {\r\n    e.preventDefault()\r\n\r\n    setAllKeys({\r\n      percentage: 0, amount: 0, result: 0,\r\n      amountOne: 0, amountTwo: 0, result2: 0\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Card border=\"success\">\r\n      <Card.Header as=\"h5\">Percentage calculator</Card.Header>\r\n      <Card.Body>\r\n        <Form onSubmit={handleSubmit}>\r\n          <CardGroup>\r\n            <Card>\r\n              <Card.Body>\r\n                <Form.Row>\r\n                  <Col lg={6} xs={12}>\r\n                    <Form.Group controlId=\"firstValue\">\r\n                      <Form.Label>What is</Form.Label>\r\n                      <InputGroup className=\"mb-2\">\r\n                        <Form.Control\r\n                          type='number'\r\n                          name='percentage'\r\n                          value={allKeys.percentage}\r\n                          onChange={changeHandler}\r\n                        />\r\n                        <InputGroup.Prepend>\r\n                          <InputGroup.Text>%</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                      </InputGroup>\r\n                    </Form.Group>\r\n                  </Col>\r\n                  <RowCol text=\"of\" name=\"amount\" value={allKeys.amount} size=\"6\" onChangeHandler={changeHandler} />\r\n                </Form.Row>\r\n              </Card.Body>\r\n            </Card>\r\n            <Card>\r\n              <Card.Body>\r\n                <Form.Row>\r\n                  <RowCol text=\"amount\" name=\"amountOne\" value={allKeys.amountOne} size=\"6\" onChangeHandler={changeHandler} />\r\n                  <RowCol text=\"is what % of\" name=\"amountTwo\" value={allKeys.amountTwo} size=\"6\" onChangeHandler={changeHandler} />\r\n                </Form.Row>\r\n              </Card.Body>\r\n            </Card>\r\n          </CardGroup>\r\n          <Button variant=\"success\" type=\"submit\">Calculate</Button>{' '}\r\n          <Button variant=\"warning\" type=\"reset\" onClick={handleClear}>Clear</Button>\r\n        </Form>\r\n      </Card.Body>\r\n      <Card.Footer className=\"text-success text-result\">\r\n        <p>{allKeys.result !== 0 ? (allKeys.result + \" is \" + allKeys.percentage + \"% of \" + allKeys.amount) : \"\"}</p>\r\n        <p>{allKeys.result2 !== 0 ? (allKeys.amountOne + \" is \" + allKeys.result2 + \"% of \" + allKeys.amountTwo) : \"\"}</p>\r\n      </Card.Footer>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default PercentageCalculator\r\n","import { useState } from 'react'\nimport { Card, Form, Row, Button} from \"react-bootstrap\";\nimport RowCol from '../lib/RowCol';\n\nconst NumberToWord = () => {\n  const [allKeys, setAllKeys] = useState({\n    numberValue: 0, wordValue: \"zero\"\n  })\n\n  const changeHandler = e => {\n    setAllKeys( prevValues => {\n      return { ...prevValues, [e.target.name]: e.target.value }\n    })\n\n    setAllKeys( prevValues => {\n      return { ...prevValues, wordValue: numToWords(+prevValues.numberValue) }\n    })\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    setAllKeys( prevValues => {\n      return { ...prevValues, wordValue: numToWords(+prevValues.numberValue) }\n    })\n  }\n\n  const handleClear = (e) => {\n    e.preventDefault()\n\n    setAllKeys({\n      numberValue: 0, wordValue: \"zero\"\n    });\n  }\n\n  const arr = x => Array.from(x);\n  const num = x => Number(x) || 0;\n  const isEmpty = xs => xs.length === 0;\n  const take = n => xs => xs.slice(0,n);\n  const drop = n => xs => xs.slice(n);\n  const reverse = xs => xs.slice(0).reverse();\n  const comp = f => g => x => f (g (x));\n  const not = x => !x;\n  const chunk = n => xs =>\n    isEmpty(xs) ? [] : [take(n)(xs), ...chunk (n) (drop (n) (xs))];\n  \n  const a = [\n    '', 'one', 'two', 'three', 'four',\n    'five', 'six', 'seven', 'eight', 'nine',\n    'ten', 'eleven', 'twelve', 'thirteen', 'fourteen',\n    'fifteen', 'sixteen', 'seventeen', 'eighteen', 'nineteen'\n  ];\n  \n  const b = [\n    '', '', 'twenty', 'thirty', 'forty',\n    'fifty', 'sixty', 'seventy', 'eighty', 'ninety'\n  ];\n  \n  const g = [\n    '', 'thousand', 'million', 'billion', 'trillion', 'quadrillion',\n    'quintillion', 'sextillion', 'septillion', 'octillion', 'nonillion'\n  ];\n\n  let numToWords = n => {  \n    let makeGroup = ([ones,tens,huns]) => {\n      return [\n        num(huns) === 0 ? '' : a[huns] + ' hundred ',\n        num(ones) === 0 ? b[tens] : (b[tens] && b[tens] + '-' || ''),\n        a[tens+ones] || a[ones]\n      ].join('');\n    };\n    \n    let thousand = (group,i) => group === '' ? group : `${group} ${g[i]}`;\n    \n    if (typeof n === 'number')\n      return numToWords(String(n));\n    else if (n === '0')\n      return 'zero';\n    else\n      return comp (chunk(3)) (reverse) (arr(n))\n        .map(makeGroup)\n        .map(thousand)\n        .filter(comp(not)(isEmpty))\n        .reverse()\n        .join(' ');\n  };\n\n  return (\n    <Card border=\"success\">\n      <Card.Header as=\"h5\">Number to word</Card.Header>\n      <Card.Body>\n        <Form onSubmit={handleSubmit}>\n          <Row>\n            <RowCol text=\"Number\" name=\"numberValue\" value={allKeys.numberValue} size=\"4\" onChangeHandler={changeHandler} />\n          </Row>\n          <Button variant=\"success\" type=\"submit\">Convert</Button>{' '}\n          <Button variant=\"warning\" type=\"reset\" onClick={handleClear}>Clear</Button>\n        </Form>\n      </Card.Body>\n      <Card.Footer className=\"text-success text-result\">{allKeys.wordValue}</Card.Footer>\n    </Card>\n  )\n}\n\nexport default NumberToWord","import { Link } from 'react-router-dom'\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <h4>Version 1.0.0</h4>\r\n      <Link to='/'>Go Back</Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About","const Footer = () => {\r\n  return (\r\n    <footer className=\"text-center\">\r\n      <p>Copyright &copy; 2021</p>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer","import './App.css';\nimport { HashRouter, Route } from 'react-router-dom';\n\nimport Header from './components/Header';\nimport StockAvg from './components/StockAvg';\nimport CagrCalculator from './components/CagrCalculator';\nimport PercentageCalculator from \"./components/PercentageCalculator\";\nimport NumberToWord from './components/NumberToWord';\nimport About from './components/About';\nimport Footer from './components/Footer';\n\nfunction App() {\n  return (\n    <HashRouter basename='/'>\n      <Header />\n      <Route path='/' exact component={StockAvg} />\n      <Route path='/cagr-calculator' exact component={CagrCalculator} />\n      <Route path='/percentage-calculator' exact component={PercentageCalculator} />\n      <Route path='/number-to-word' exact component={NumberToWord} />\n      <Route path='/about' component={About} />\n      <Footer />\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
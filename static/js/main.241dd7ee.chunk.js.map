{"version":3,"sources":["components/Header.js","lib/RowCol.js","components/StockAvg.js","components/CagrCalculator.js","components/PercentageCalculator.js","components/NumberToWord.js","components/About.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","location","useLocation","pathname","Navbar","collapseOnSelect","expand","Container","Brand","Toggle","Collapse","className","id","Nav","map","k","v","no","href","name","isActive","to","navLink","RowCol","text","value","size","onChangeHandler","Col","lg","xs","Form","Group","controlId","Label","Control","type","placeholder","onChange","defaultProps","StockAvg","useState","priceOne","qtyOne","priceTwo","qtyTwo","totalInvestment","totalQty","allValues","setAllValues","changeHandler","e","prevValues","target","Card","border","as","Body","onSubmit","preventDefault","alert","CardGroup","Row","Footer","Button","variant","onClick","CagrCalculator","firstValue","finalValue","noOfYears","cagr","allKeys","setAllKeys","Math","pow","PercentageCalculator","percentage","amount","result","amountOne","amountTwo","result2","InputGroup","Prepend","Text","NumberToWord","numberValue","wordValue","num","x","Number","isEmpty","length","take","n","slice","reverse","comp","f","g","not","chunk","drop","a","b","numToWords","String","Array","from","ones","tens","huns","join","group","i","filter","About","App","basename","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.241dd7ee.chunk.js","sourcesContent":["import { Link, useLocation } from \"react-router-dom\";\r\nimport { Navbar, Nav, Container} from 'react-bootstrap';\r\n\r\nconst Header = () => {\r\n  let location = useLocation().pathname;\r\n\r\n  let navLink = (no, href, name) => {\r\n    let isActive = location == href\r\n    return (<li key={no}><Link key={no} className={ isActive ? 'is-active' : \"\"} to={href}>{name}</Link></li>)\r\n  }\r\n\r\n  const links = [\r\n    [\"/\", \"Stock average calculator\"],\r\n    [\"/cagr-calculator\", \"CAGR calculator\"],\r\n    [\"/percentage-calculator\", \"Percentage calculator\"],\r\n    [\"/number-to-word\", \"Number to word\"],\r\n    [\"/about\", \"About\"]\r\n  ]\r\n\r\n  return (\r\n    <Navbar collapseOnSelect expand='md'>\r\n      <Container>\r\n        <Navbar.Brand>Calculators</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\r\n        <Navbar.Collapse className='menu' id=\"responsive-navbar-nav\">\r\n          <Nav>\r\n            { links.map((k, v) => navLink(v, k[0], k[1]))}\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import {Form, Col} from \"react-bootstrap\";\r\n\r\nconst RowCol = ({text, name, value, size, onChangeHandler}) => {\r\n\r\n  return (\r\n    <Col lg={size} xs={12}>\r\n      <Form.Group controlId={name}>\r\n        <Form.Label>{text}</Form.Label>\r\n        <Form.Control\r\n          type='number'\r\n          placeholder={text}\r\n          name={name}\r\n          value={value}\r\n          onChange={onChangeHandler}\r\n        />\r\n      </Form.Group>\r\n    </Col>\r\n  )\r\n};\r\n\r\nRowCol.defaultProps = {\r\n  value: 0,\r\n  size: 6\r\n}\r\n\r\n\r\nexport default RowCol","import { useState } from 'react'\nimport { Card, CardGroup, Form, Row, Button } from \"react-bootstrap\";\nimport RowCol from '../lib/RowCol';\n\nconst StockAvg = () => {\n  const [allValues, setAllValues] = useState({\n    priceOne: 0, qtyOne: 0,\n    priceTwo: 0, qtyTwo: 0,\n    totalInvestment: 0, totalQty: 0\n  })\n  \n  const changeHandler = e => {\n    setAllValues( prevValues => {\n      return { ...prevValues, [e.target.name]: e.target.value }\n    })\n\n    setAllValues( prevValues => {\n      return { ...prevValues,\n        totalInvestment: (+prevValues.priceOne * +prevValues.qtyOne) + (+prevValues.priceTwo * +prevValues.qtyTwo),\n        totalQty: +prevValues.qtyOne + +prevValues.qtyTwo,\n      }\n    });\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    if (allValues.priceOne <= 0 || allValues.priceTwo <= 0) {\n      alert('Please add a price')\n      return\n    }\n\n    if (allValues.qtyOne <= 0 || allValues.qtyTwo <= 0) {\n      alert('Please add a Quantity')\n      return\n    }\n\n    setAllValues( prevValues => {\n      return { ...prevValues,\n        totalInvestment: (+prevValues.priceOne * +prevValues.qtyOne) + (+prevValues.priceTwo * +prevValues.qtyTwo),\n        totalQty: +prevValues.qtyOne + +prevValues.qtyTwo,\n      }\n    });\n  }\n\n  const handleClear = (e) => {\n    e.preventDefault()\n\n    setAllValues({\n      priceOne: 0, qtyOne: 0,\n      priceTwo: 0, qtyTwo: 0,\n      totalInvestment: 0, totalQty: 0\n    });\n  }\n  \n  return (\n    <div className=\"container\">\n      <Card border=\"success\">\n        <Card.Header as=\"h5\">Stock average calculator</Card.Header>\n        <Card.Body>\n          <Form onSubmit={handleSubmit}>\n            <CardGroup>\n              <Card>\n                <Card.Header as=\"h5\">First Buy</Card.Header>\n                <Card.Body>\n                  <Row>\n                    <RowCol text=\"Buy Price\" name=\"priceOne\" value={allValues.priceOne} size=\"6\" onChangeHandler={changeHandler} />\n                    <RowCol text=\"Buy Quantity\" name=\"qtyOne\" value={allValues.qtyOne} size=\"6\" onChangeHandler={changeHandler} />\n                  </Row>\n                </Card.Body>\n                <Card.Footer className=\"text-muted\">Total Investment {allValues.priceOne * allValues.qtyOne}</Card.Footer>\n              </Card>\n              <Card>\n                <Card.Header as=\"h5\">Second Buy</Card.Header>\n                <Card.Body>\n                  <Row>\n                    <RowCol text=\"Buy Price\" name=\"priceTwo\" value={allValues.priceTwo} size=\"6\" onChangeHandler={changeHandler} />\n                    <RowCol text=\"Buy Quantity\" name=\"qtyTwo\" value={allValues.qtyTwo} size=\"6\" onChangeHandler={changeHandler} />\n                  </Row>\n                </Card.Body>\n                <Card.Footer className=\"text-muted\">Total Investment {allValues.priceTwo * allValues.qtyTwo}</Card.Footer>\n              </Card>\n            </CardGroup>\n            <div className=\"btn-m-1r\">\n              <Button variant=\"success\" type=\"submit\">Calculate Average</Button>{' '}\n              <Button variant=\"warning\" type=\"reset\" onClick={handleClear}>Clear</Button>\n            </div>\n          </Form>\n        </Card.Body>\n        <Card.Footer className=\"text-success\">\n          <p>\n            <span>Total Investment { allValues.totalInvestment},  </span>\n            <span>Total Quantity { allValues.totalQty }  </span>\n          </p>\n          <p className=\"text-result\">Average { allValues.totalQty > 0 ? (allValues.totalInvestment / allValues.totalQty) : 0} </p>\n        </Card.Footer>\n      </Card>\n    </div>\n  )\n}\n\nexport default StockAvg\n","import { useState } from 'react'\r\nimport { Card, Form, Row, Button} from \"react-bootstrap\";\r\nimport RowCol from '../lib/RowCol';\r\n\r\nconst CagrCalculator = () => {\r\n  const [allKeys, setAllKeys] = useState({\r\n    firstValue: 0, finalValue: 0,\r\n    noOfYears: 0, cagr: 0\r\n  })\r\n  \r\n  const changeHandler = e => {\r\n    setAllKeys( prevValues => {\r\n      return { ...prevValues, [e.target.name]: e.target.value }\r\n    })\r\n\r\n    setAllKeys( prevValues => {\r\n      if (+prevValues.noOfYears > 0 && +prevValues.finalValue > 0 && +prevValues.firstValue > 0) {\r\n        return { ...prevValues,\r\n          cagr: (Math.pow((+prevValues.finalValue / +prevValues.firstValue), (1/+prevValues.noOfYears)) - 1) * 100\r\n        }\r\n      } else {\r\n        return { ...prevValues, [e.target.name]: e.target.value }\r\n      }\r\n    });\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    if (allKeys.firstValue <= 0) {\r\n      alert('Please enter a Initial Value')\r\n      return\r\n    }\r\n\r\n    if (allKeys.finalValue <= 0) {\r\n      alert('Please enter a Final Value')\r\n      return\r\n    }\r\n\r\n    if (allKeys.noOfYears <= 0) {\r\n      alert('Please enter a no of years')\r\n      return\r\n    }\r\n\r\n    setAllKeys( prevValues => {\r\n      return { ...prevValues,\r\n        cagr: (Math.pow((+prevValues.finalValue / +prevValues.firstValue), (1/+prevValues.noOfYears)) - 1) * 100\r\n      }\r\n    });\r\n  }\r\n\r\n  const handleClear = (e) => {\r\n    e.preventDefault()\r\n\r\n    setAllKeys({\r\n      firstValue: 0, finalValue: 0,\r\n      noOfYears: 0, cagr: 0\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">.\r\n      <Card border=\"success\">\r\n        <Card.Header as=\"h5\">CAGR calculator</Card.Header>\r\n        <Card.Body>\r\n          <Form onSubmit={handleSubmit}>\r\n            <Row>\r\n              <RowCol text=\"Initial Value\" name=\"firstValue\" value={allKeys.firstValue} size=\"4\" onChangeHandler={changeHandler} />\r\n              <RowCol text=\"Final Value\" name=\"finalValue\" value={allKeys.finalValue} size=\"4\" onChangeHandler={changeHandler} />\r\n              <RowCol text=\"Years\" name=\"noOfYears\" value={allKeys.noOfYears} size=\"4\" onChangeHandler={changeHandler} />\r\n            </Row>\r\n            <Button variant=\"success\" type=\"submit\">Calculate CAGR</Button>{' '}\r\n            <Button variant=\"warning\" type=\"reset\" onClick={handleClear}>Clear</Button>\r\n          </Form>\r\n        </Card.Body>\r\n        <Card.Footer className=\"text-success text-result\">CAGR {allKeys.cagr}%</Card.Footer>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CagrCalculator\r\n","import { useState } from 'react'\r\nimport { Card, Form, Row, Button, Col, InputGroup, CardGroup } from \"react-bootstrap\";\r\nimport RowCol from '../lib/RowCol';\r\n\r\nconst PercentageCalculator = () => {\r\n  const [allKeys, setAllKeys] = useState({\r\n    percentage: 0, amount: 0, result: 0,\r\n    amountOne: 0, amountTwo: 0, result2: 0\r\n  })\r\n  \r\n  const changeHandler = e => {\r\n    setAllKeys( prevValues => {\r\n      return { ...prevValues, [e.target.name]: e.target.value }\r\n    })\r\n\r\n    setAllKeys( prevValues => {\r\n      if (+prevValues.percentage > 0 && +prevValues.amount > 0) {\r\n        return { ...prevValues,\r\n          result: +prevValues.percentage > 0 && +prevValues.amount > 0 ? (+prevValues.amount * +prevValues.percentage) / 100 : 0,\r\n          result2: +prevValues.amountOne > 0 && +prevValues.amountTwo > 0 ? (+prevValues.amountOne / +prevValues.amountTwo) * 100 : 0\r\n        }\r\n      } else {\r\n        return { ...prevValues, [e.target.name]: e.target.value }\r\n      }\r\n    });\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    if (+allKeys.percentage <= 0) {\r\n      alert('Please enter a percentage')\r\n      return\r\n    }\r\n\r\n    if (+allKeys.amount <= 0) {\r\n      alert('Please enter a Amount')\r\n      return\r\n    }\r\n\r\n    if (+allKeys.percentage > 0 && +allKeys.amount > 0) {\r\n      setAllKeys( prevValues => {\r\n        return { ...prevValues,\r\n          result: (+prevValues.amount * +prevValues.percentage) / 100\r\n        }\r\n      });\r\n    } \r\n    \r\n    if(+allKeys.amountOne > 0 && +allKeys.amountTwo > 0){\r\n      setAllKeys( prevValues => {\r\n        return { ...prevValues,\r\n          result2: (+prevValues.amountOne / +prevValues.amountTwo) * 100\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  const handleClear = (e) => {\r\n    e.preventDefault()\r\n\r\n    setAllKeys({\r\n      percentage: 0, amount: 0, result: 0,\r\n      amountOne: 0, amountTwo: 0, result2: 0\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Card border=\"success\">\r\n        <Card.Header as=\"h5\">Percentage calculator</Card.Header>\r\n        <Card.Body>\r\n          <Form onSubmit={handleSubmit}>\r\n            <CardGroup>\r\n              <Card>\r\n                <Card.Body>\r\n                  <Row>\r\n                    <Col lg={6} xs={12}>\r\n                      <Form.Group controlId=\"firstValue\">\r\n                        <Form.Label>What is</Form.Label>\r\n                        <InputGroup className=\"mb-2\">\r\n                          <Form.Control\r\n                            type='number'\r\n                            name='percentage'\r\n                            value={allKeys.percentage}\r\n                            onChange={changeHandler}\r\n                          />\r\n                          <InputGroup.Prepend>\r\n                            <InputGroup.Text>%</InputGroup.Text>\r\n                          </InputGroup.Prepend>\r\n                        </InputGroup>\r\n                      </Form.Group>\r\n                    </Col>\r\n                    <RowCol text=\"of\" name=\"amount\" value={allKeys.amount} size=\"6\" onChangeHandler={changeHandler} />\r\n                  </Row>\r\n                </Card.Body>\r\n              </Card>\r\n              <Card>\r\n                <Card.Body>\r\n                  <Row>\r\n                    <RowCol text=\"amount\" name=\"amountOne\" value={allKeys.amountOne} size=\"6\" onChangeHandler={changeHandler} />\r\n                    <RowCol text=\"is what % of\" name=\"amountTwo\" value={allKeys.amountTwo} size=\"6\" onChangeHandler={changeHandler} />\r\n                  </Row>\r\n                </Card.Body>\r\n              </Card>\r\n            </CardGroup>\r\n            <div className=\"btn-m-1r\">\r\n              <Button variant=\"success\" type=\"submit\">Calculate</Button>{' '}\r\n              <Button variant=\"warning\" type=\"reset\" onClick={handleClear}>Clear</Button>\r\n            </div>\r\n          </Form>\r\n        </Card.Body>\r\n        <Card.Footer className=\"text-success text-result\">\r\n          <p>{allKeys.result !== 0 ? (allKeys.result + \" is \" + allKeys.percentage + \"% of \" + allKeys.amount) : \"\"}</p>\r\n          <p>{allKeys.result2 !== 0 ? (allKeys.amountOne + \" is \" + allKeys.result2 + \"% of \" + allKeys.amountTwo) : \"\"}</p>\r\n        </Card.Footer>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PercentageCalculator\r\n","import { useState } from 'react'\nimport { Card, Form, Row, Button} from \"react-bootstrap\";\nimport RowCol from '../lib/RowCol';\n\nconst NumberToWord = () => {\n  const [allKeys, setAllKeys] = useState({\n    numberValue: 0, wordValue: \"zero\"\n  })\n\n  const changeHandler = e => {\n    setAllKeys( prevValues => {\n      return { ...prevValues, [e.target.name]: e.target.value }\n    })\n\n    setAllKeys( prevValues => {\n      return { ...prevValues, wordValue: numToWords(+prevValues.numberValue) }\n    })\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    setAllKeys( prevValues => {\n      return { ...prevValues, wordValue: numToWords(+prevValues.numberValue) }\n    })\n  }\n\n  const handleClear = (e) => {\n    e.preventDefault()\n\n    setAllKeys({\n      numberValue: 0, wordValue: \"zero\"\n    });\n  }\n\n  const arr = x => Array.from(x);\n  const num = x => Number(x) || 0;\n  const isEmpty = xs => xs.length === 0;\n  const take = n => xs => xs.slice(0,n);\n  const drop = n => xs => xs.slice(n);\n  const reverse = xs => xs.slice(0).reverse();\n  const comp = f => g => x => f (g (x));\n  const not = x => !x;\n  const chunk = n => xs =>\n    isEmpty(xs) ? [] : [take(n)(xs), ...chunk (n) (drop (n) (xs))];\n  \n  const a = [\n    '', 'one', 'two', 'three', 'four',\n    'five', 'six', 'seven', 'eight', 'nine',\n    'ten', 'eleven', 'twelve', 'thirteen', 'fourteen',\n    'fifteen', 'sixteen', 'seventeen', 'eighteen', 'nineteen'\n  ];\n  \n  const b = [\n    '', '', 'twenty', 'thirty', 'forty',\n    'fifty', 'sixty', 'seventy', 'eighty', 'ninety'\n  ];\n  \n  const g = [\n    '', 'thousand', 'million', 'billion', 'trillion', 'quadrillion',\n    'quintillion', 'sextillion', 'septillion', 'octillion', 'nonillion'\n  ];\n\n  let numToWords = n => {  \n    let makeGroup = ([ones,tens,huns]) => {\n      return [\n        num(huns) === 0 ? '' : a[huns] + ' hundred ',\n        num(ones) === 0 ? b[tens] : (b[tens] && b[tens] + '-' || ''),\n        a[tens+ones] || a[ones]\n      ].join('');\n    };\n    \n    let thousand = (group,i) => group === '' ? group : `${group} ${g[i]}`;\n    \n    if (typeof n === 'number')\n      return numToWords(String(n));\n    else if (n === '0')\n      return 'zero';\n    else\n      return comp (chunk(3)) (reverse) (arr(n))\n        .map(makeGroup)\n        .map(thousand)\n        .filter(comp(not)(isEmpty))\n        .reverse()\n        .join(' ');\n  };\n\n  return (\n    <div className=\"container\">\n      <Card border=\"success\">\n        <Card.Header as=\"h5\">Number to word</Card.Header>\n        <Card.Body>\n          <Form onSubmit={handleSubmit}>\n            <Row>\n              <RowCol text=\"Number\" name=\"numberValue\" value={allKeys.numberValue} size=\"4\" onChangeHandler={changeHandler} />\n            </Row>\n            <Button variant=\"success\" type=\"submit\">Convert</Button>{' '}\n            <Button variant=\"warning\" type=\"reset\" onClick={handleClear}>Clear</Button>\n          </Form>\n        </Card.Body>\n        <Card.Footer className=\"text-success text-result\">{allKeys.wordValue}</Card.Footer>\n      </Card>\n    </div>\n  )\n}\n\nexport default NumberToWord","import { Link } from 'react-router-dom'\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <h4>Version 1.0.0</h4>\r\n      <Link to='/'>Go Back</Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About","const Footer = () => {\r\n  return (\r\n    <footer className=\"text-center\">\r\n      <p>Copyright &copy; 2021</p>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer","import './App.scss';\nimport { HashRouter, Route } from 'react-router-dom';\n\nimport Header from './components/Header';\nimport StockAvg from './components/StockAvg';\nimport CagrCalculator from './components/CagrCalculator';\nimport PercentageCalculator from \"./components/PercentageCalculator\";\nimport NumberToWord from './components/NumberToWord';\nimport About from './components/About';\nimport Footer from './components/Footer';\n\nfunction App() {\n  return (\n    <HashRouter basename='/'>\n      <Header />\n      <Route path='/' exact component={StockAvg} />\n      <Route path='/cagr-calculator' exact component={CagrCalculator} />\n      <Route path='/percentage-calculator' exact component={PercentageCalculator} />\n      <Route path='/number-to-word' exact component={NumberToWord} />\n      <Route path='/about' component={About} />\n      <Footer />\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}